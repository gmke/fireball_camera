#!/usr/bin/python3 

import math
import numpy as np
#ix,iy,cx,cy
#1586.6077, 139.5359, 1641.4448543810088, 108.04595411545017
#1241.754, 1054.5446, 1249.1584733238378, 1078.3656681783477
star_dist_data=[('', 867.59155, 723.9287, 871.4655162274971, 718.4921036847205), ('Î·Aur', 1004.0132, 411.10156, 1004.721972385238, 412.426110765834), ('Î¹Per', 1494.3868, 156.90544, 1523.7917968420752, 138.3475460117986), ('41Ari', 1717.3289, 682.2977, 1785.883587253917, 706.8074433392337), ('ÏˆPer', 1397.0983, 215.65942, 1408.4592799990123, 209.0888671830652), ('ÎµTau', 1191.0698, 972.1551, 1192.7652820270027, 980.4837741816671), ('Î¸Gem', 450.57257, 476.9672, 405.2034441309511, 473.0692494678991), ('Ï€Aur', 777.1174, 255.8631, 770.3967720562056, 250.2366495690776), ('ÎºPer', 1527.3217, 274.40982, 1553.0042920498886, 267.0149853196393), ('Î¿Per', 1426.744, 624.3998, 1430.1665562477656, 627.2699121303308), ('Ï‡1Ori', 680.73846, 900.71265, 666.7869577350289, 913.4230996293184), ('37Tau', 1331.5829, 892.56165, 1336.6362720908994, 900.830868753653), ('Î»Per', 1265.8734, 178.02281, 1270.0540070064121, 172.24418974218884), ('58Per', 1148.3851, 416.12988, 1146.607292550953, 417.3911103653684), ('Î¸Per', 1586.6077, 139.5359, 1641.4448543810088, 108.04595411545017), ('Î¼Gem', 527.52515, 806.5107, 496.3956766453372, 822.7185121002288), ('136Tau', 713.4685, 720.64105, 712.759235802654, 722.3076150451975), ('119Tau', 841.04816, 886.61304, 799.0635966753437, 975.3198355153204), ('3Cam', 1128.9586, 114.144295, 1129.3156533434137, 105.48622407435079), ('Î¾Per', 1342.9652, 546.8367, 1341.3795996263457, 546.3766110944008), ('53Per', 1212.3519, 279.63394, 1212.4730364573495, 280.57246703576004), ('16Lyn', 532.9561, 202.02477, 484.63209478711667, 175.04376911492733), ('48Per', 1265.4712, 244.97647, 1267.3717288818566, 244.0825553079543), ('Î¼Per', 1237.4618, 229.47095, 1238.6967635878614, 228.03769464776883), ('ÏPer', 1585.6425, 419.55017, 1613.7911770452329, 419.4697287354862), ('16Per', 1652.1355, 412.9996, 1698.3029867405849, 411.5613316661064), ('ÎµPer', 1337.1862, 436.8998, 1336.5071926631658, 438.59272051047003), ('Î´Per', 1373.2794, 230.53828, 1381.3540556990588, 225.66151768577703), ('Î½Gem', 483.29944, 850.03326, 437.0143112275748, 877.9386966655679), ('38Gem', 192.4596, 1030.3717, 168.75063030039996, 1050.371657869278), ('Ï€Per', 1554.6748, 406.35214, 1643.1300184878442, 388.7875356745381), ('16Aur', 925.02734, 607.5958, 929.5120231499327, 603.8227730376069), ('Îº1Tau', 1205.6412, 883.46234, 1211.912318980359, 897.7600348444666), ('Î¸2Tau', 1188.2142, 1051.0234, 1192.3295100943847, 1071.1563933495736), ('Î·Tau', 1427.8115, 831.1816, 1436.8897879088659, 841.3872216643236), ('Î¶Tau', 779.7124, 897.45935, 776.1948881889168, 903.4465848305026), ('34Per', 1417.3762, 177.888, 1433.7577760823394, 166.36147180190142), ('Î½Per', 1387.1512, 363.95123, 1390.563396202971, 364.35654994289337), ('Î¸Aur', 727.6002, 475.12784, 726.6032567383572, 472.9610954360381), ('ÎµAur', 1030.1631, 346.37357, 1029.881889397179, 348.1819084627632), ('Î³Tau', 1241.754, 1054.5446, 1249.1584733238378, 1078.3656681783477), ('Ï„Per', 1518.8488, 67.24988, 1565.3228664600615, 27.888885533256712), ('Î³Per', 1477.0461, 59.570423, 1514.4371381844878, 23.786619376883777), ('Ïˆ1Aur', 700.23676, 146.06114, 676.6865291905162, 127.06710489371932), ('Ïˆ2Aur', 582.6615, 292.505, 555.6174463914496, 279.84580145008925), ('41Tau', 1316.012, 757.21265, 1316.1346297825148, 757.4626471171905), ('Î´1Tau', 1224.4807, 1011.5542, 1228.38822618857, 1025.1645678963578), ('Ï…Aur', 770.9866, 482.28488, 772.1940214666549, 479.97488335286516), ('Î¾Gem', 293.0, 1030.0, 242.2632753780955, 1071.4201176455927)]


ix = []
iy = []
cx = []
cy = []
r = []
aa = []
rr = []

for star_name, iix, iiy, ccx, ccy in star_dist_data:
   ix.append (iix)
   iy.append (iiy)
   cx.append (ccx)
   cy.append (ccy)
   r.append (math.sqrt(iix**2 + iiy**2) )
   r_val = math.sqrt(iix**2 + iiy**2) 
   aa.append([ccx/iix - 1])
   rr.append([(r_val**2)*(r_val**4)])

A = np.array(aa)
B = np.array(rr)
print ("A:", A)
print ("B:", B)
z = np.linalg.lstsq(A,B)
#z = np.linalg.solve(A,B)
print ("Z:", z)

